
9.0 - Loops

Os loops nos permitem repetir um bloco de código várias vezes. 
Em Python, os loops mais comuns são for e while.


* For

O loop for é utilizado para iterar sobre uma sequência (como uma lista, uma tupla ou uma string) 
ou qualquer objeto iterável. A sintaxe básica é a seguinte:

frutas = ["maçã", "banana", "laranja"]
for fruta in frutas:
    print(fruta)

Neste exemplo, o loop for itera sobre a lista frutas. Em cada iteração, a variável fruta assume o 
valor de um elemento da lista, e o bloco de código dentro do loop é executado. Neste caso, cada fruta 
é impressa em uma linha separada.


* While

O loop while é utilizado para repetir um bloco de código enquanto uma condição for verdadeira. 
A sintaxe básica é a seguinte:

contador = 0
while contador < 5:

    print(contador)
    contador += 1

Neste exemplo, o loop while é executado enquanto a variável contador for menor que 5. Em cada iteração,
o valor de contador é impresso e depois incrementado em 1 pela instrução contador += 1. 
O loop será interrompido quando contador atingir o valor de 5.

=> É importante ter cuidado ao usar o loop while, pois, se a condição nunca se tornar falsa, o loop 
será executado indefinidamente, o que é conhecido como um loop infinito.


* Controle de loops

Python fornece algumas instruções especiais para controlar o fluxo de execução dentro dos loops:

Break
A instrução break é utilizada para sair prematuramente de um loop, independentemente da condição. 
Quando um break é encontrado, o loop é interrompido e o fluxo de execução continua com a próxima 
instrução fora do loop.

Continue
A instrução continue é utilizada para pular o restante do bloco de código dentro de um loop e passar 
para a próxima iteração.

Pass
A instrução pass é uma operação nula que não faz nada. É utilizada como um marcador de posição quando 
uma instrução é sintaticamente necessária, mas nenhuma ação é desejada.